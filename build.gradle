// i love arch loom... it really helps with the porting of shit from fabric... pls

plugins {
    id 'dev.architectury.loom' version '0.12.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	forge {
		mixinConfigs = [
				"liroth.mixins.json"
		]
	}
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url "https://cursemaven.com" }
    maven { url 'https://maven.kyrptonaught.dev' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.dblsaiko.net/" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url 'https://maven.blamejared.com' }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://modmaven.dev" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	modImplementation('software.bernie.geckolib:geckolib-forge-1.20:4.2')
	modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:14.0.0.11")
	modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-forge-api:14.0.0.11")
	modRuntimeOnly("mezz.jei:jei-${minecraft_version}-forge:14.0.0.11")
	modImplementation("com.github.mysticpasta1:customportalapi:1.20-forge-SNAPSHOT")
	include("com.github.mysticpasta1:customportalapi:1.20-forge-SNAPSHOT")
	modApi "me.shedaniel.cloth:cloth-config-forge:11.1.106"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId archivesBaseName
			from components.java
		}
	}
	repositories {
		maven {
			url ='s3://maven.kyrptonaught.dev'
			credentials(AwsCredentials) {
				accessKey = System.getenv('maven-key-id')
				secretKey = System.getenv('maven-key')
			}
		}
	}

	loom {
		accessWidenerPath = file("src/main/resources/liroth.accesswidener")
	}
}
